/* CH376芯片 文件系统层 V1.0 */
/* 提供文件系统常用子程序,提供命令打包 */
/* 不使用的子程序可以注释掉,从而节约单片机的程序ROM空间和数据RAM空间 */
/* 这里的子程序是通过括号中的变量传递参数,如果参数较多,为了节约RAM,也可以参考CH375子程序库改成通过同一全局变量/联合结构CH376_CMD_DATA传递 */

/* name 参数是指短文件名, 可以包括根目录符, 但不含有路径分隔符, 总长度不超过1+8+1+3+1字节 */
/* PathName 参数是指全路径的短文件名, 包括根目录符、多级子目录及路径分隔符、文件名/目录名 */
/* LongName 参数是指长文件名, 以UNICODE小端顺序编码, 以两个0字节结束, 使用长文件名子程序必须先定义全局缓冲区GlobalBuf, 长度不小于64字节, 可以与其它子程序共用 */

/* 定义 NO_DEFAULT_CH376_INT 用于禁止默认的Wait376Interrupt子程序,禁止后,应用程序必须自行定义一个同名子程序 */
/* 定义 DEF_INT_TIMEOUT      用于设置默认的Wait376Interrupt子程序中的等待中断的超时时间/循环计数值, 0则不检查超时而一直等待 */
/* 定义 EN_DIR_CREATE        用于提供新建多级子目录的子程序,默认是不提供 */
/* 定义 EN_DISK_QUERY        用于提供磁盘容量查询和剩余空间查询的子程序,默认是不提供 */
/* 定义 EN_SECTOR_ACCESS     用于提供以扇区为单位读写文件的子程序,默认是不提供 */
/* 定义 EN_LONG_NAME         用于提供支持长文件名的子程序,默认是不提供 */

#ifndef	__CH376_FS_H__
#define __CH376_FS_H__

#include "CH376_SPI.H"

#define	STRUCT_OFFSET(s, m)	((unsigned char)(&((s *)0) -> m))/* 定义获取结构成员相对偏移地址的宏 */

#ifdef	EN_LONG_NAME
#ifndef	LONG_NAME_BUF_LEN
#define	LONG_NAME_BUF_LEN	(LONG_NAME_PER_DIR * 20)/* 自行定义的长文件名缓冲区长度,最小值为LONG_NAME_PER_DIR*1 */
#endif
#endif


/*************************************************************************************************/
//从当前主机端点的接收缓冲区读取数据块,返回长度
/*************************************************************************************************/
extern unsigned char CH376ReadBlock(unsigned char *buf);

/*************************************************************************************************/
//向内部指定缓冲区写入请求的数据块,返回长度
/*************************************************************************************************/
extern unsigned char CH376WriteReqBlock(unsigned char *buf);

/*************************************************************************************************/
//向USB主机端点的发送缓冲区写入数据块
/*************************************************************************************************/
extern void CH376WriteHostBlock(unsigned char *buf,unsigned char len);

/*************************************************************************************************/
//向内部缓冲区指定偏移地址写入数据块
/*************************************************************************************************/
extern void CH376WriteOfsBlock(unsigned char *buf,unsigned char ofs,unsigned char len);

/*************************************************************************************************/
//设置将要操作的文件的文件名
/*************************************************************************************************/
extern void CH376SetFileName(unsigned char *name);

/*************************************************************************************************/
//从CH376芯片读取32位的数据并结束命令
/*************************************************************************************************/
extern unsigned int CH376Read32bitDat(void);

/*************************************************************************************************/
//读CH376芯片内部的8位变量
/*************************************************************************************************/
extern unsigned char CH376ReadVar8(unsigned char var);

/*************************************************************************************************/
//写CH376芯片内部的8位变量
/*************************************************************************************************/
extern void CH376WriteVar8(unsigned char var,unsigned char dat);

/*************************************************************************************************/
//读CH376芯片内部的32位变量
/*************************************************************************************************/
extern unsigned int CH376ReadVar32(unsigned char var);

/*************************************************************************************************/
//写CH376芯片内部的32位变量
/*************************************************************************************************/
extern void CH376WriteVar32(unsigned char var,unsigned int dat);

/*************************************************************************************************/
//在调用CH376DirInfoRead获取FAT_DIR_INFO结构之后应该通知CH376结束
/*************************************************************************************************/
extern void CH376EndDirInfo(void);  

/*************************************************************************************************/
//读取当前文件长度
/*************************************************************************************************/
extern unsigned int CH376GetFileSize(void);

/*************************************************************************************************/
//获取磁盘和文件系统的工作状态
/*************************************************************************************************/
extern unsigned char CH376GetDiskStatus(void);

/*************************************************************************************************/
//获取中断状态并取消中断请求
/*************************************************************************************************/
extern unsigned char CH376GetIntStatus(void);

#ifndef	NO_DEFAULT_CH376_INT
/*************************************************************************************************/
//等待CH376中断(INT#低电平);，返回中断状态码, 超时则返回ERR_USB_UNKNOWN
/*************************************************************************************************/
extern unsigned char Wait376Interrupt(void);
#endif

/*************************************************************************************************/
//发出命令码后,等待中断
/*************************************************************************************************/
extern unsigned char CH376SendCmdWaitInt(unsigned char mCmd);

/*************************************************************************************************/
//发出命令码和一字节数据后,等待中断
/*************************************************************************************************/
extern unsigned char CH376SendCmdDatWaitInt(unsigned char mCmd,unsigned char mDat);

/*************************************************************************************************/
//检查USB存储器错误
/*************************************************************************************************/
extern unsigned char CH376DiskReqSense(void);

/*************************************************************************************************/
//检查U盘是否连接,不支持SD卡
/*************************************************************************************************/
extern unsigned char CH376DiskConnect(void);

/*************************************************************************************************/
//初始化磁盘并测试磁盘是否就绪
/*************************************************************************************************/
extern unsigned char CH376DiskMount(void);  

/*************************************************************************************************/
//在根目录或者当前目录下打开文件或者目录(文件夹);
/*************************************************************************************************/
extern unsigned char CH376FileOpen(unsigned char *name);

/*************************************************************************************************/
//在根目录或者当前目录下新建文件,如果文件已经存在那么先删除
/*************************************************************************************************/
extern unsigned char CH376FileCreate(unsigned char *name);

/*************************************************************************************************/
//在根目录下新建目录(文件夹);并打开,如果目录已经存在那么直接打开
/*************************************************************************************************/
extern unsigned char CH376DirCreate(unsigned char *name);

/*************************************************************************************************/
//从路径中分离出最后一级文件名或者目录(文件夹);名,返回最后一级文件名或者目录名的字节偏移
/*************************************************************************************************/
extern unsigned char CH376SeparatePath(unsigned char *path);

/*************************************************************************************************/
//打开多级目录下的文件或者目录的上级目录,支持多级目录路径,支持路径分隔符,路径长度不超过255个字符
//StopName 指向最后一级文件名或者目录名
/*************************************************************************************************/
extern unsigned char CH376FileOpenDir(unsigned char *PathName,unsigned char StopName);  

/*************************************************************************************************/
//打开多级目录下的文件或者目录(文件夹);,支持多级目录路径,支持路径分隔符,路径长度不超过255个字符
/*************************************************************************************************/
extern unsigned char CH376FileOpenPath(unsigned char *PathName);

/*************************************************************************************************/
//新建多级目录下的文件,支持多级目录路径,支持路径分隔符,路径长度不超过255个字符
/*************************************************************************************************/
extern unsigned char CH376FileCreatePath(unsigned char *PathName);

#ifdef	EN_DIR_CREATE
/*************************************************************************************************/
//新建多级目录下的目录(文件夹);并打开,支持多级目录路径,支持路径分隔符,路径长度不超过255个字符
/*************************************************************************************************/
extern unsigned char CH376DirCreatePath(unsigned char *PathName);
#endif

/*************************************************************************************************/
//删除文件,如果已经打开则直接删除,否则对于文件会先打开再删除,支持多级目录路径
/*************************************************************************************************/
extern unsigned char CH376FileErase(unsigned char *PathName);

/*************************************************************************************************/
//关闭当前已经打开的文件或者目录(文件夹);
/*************************************************************************************************/
extern unsigned char CH376FileClose(unsigned char UpdateSz);

/*************************************************************************************************/
//读取当前文件的目录信息
/*************************************************************************************************/
extern unsigned char CH376DirInfoRead(void);

/*************************************************************************************************/
//保存文件的目录信息
/*************************************************************************************************/
extern unsigned char CH376DirInfoSave(void);

/*************************************************************************************************/
//以字节为单位移动当前文件指针
/*************************************************************************************************/
extern unsigned char CH376ByteLocate(unsigned int offset);

/*************************************************************************************************/
//以字节为单位从当前位置读取数据块
/*************************************************************************************************/
extern unsigned char CH376ByteRead(unsigned char *buf,unsigned short ReqCount,unsigned short *RealCount);

/*************************************************************************************************/
//以字节为单位向当前位置写入数据块
/*************************************************************************************************/
extern unsigned char CH376ByteWrite(unsigned char *buf,unsigned short ReqCount,unsigned short *RealCount);

#ifdef	EN_DISK_QUERY
/*************************************************************************************************/
//查询磁盘物理容量,扇区数
/*************************************************************************************************/
extern unsigned char CH376DiskCapacity(unsigned int *DiskCap);

/*************************************************************************************************/
//查询磁盘剩余空间信息,扇区数
/*************************************************************************************************/
extern unsigned char CH376DiskQuery(unsigned int *DiskFre);
#endif

/*************************************************************************************************/
//以扇区为单位移动当前文件指针
/*************************************************************************************************/
extern unsigned char CH376SecLocate(unsigned int offset);

#ifdef	EN_SECTOR_ACCESS
/*************************************************************************************************/
//从U盘读取多个扇区的数据块到缓冲区,不支持SD卡
//iLbaStart 是准备读取的线性起始扇区号, iSectorCount 是准备读取的扇区数
/*************************************************************************************************/
extern unsigned char CH376DiskReadSec(unsigned char *buf,unsigned int iLbaStart,unsigned char iSectorCount);  

/*************************************************************************************************/
//将缓冲区中的多个扇区的数据块写入U盘,不支持SD卡
//iLbaStart 是写入的线起始性扇区号, iSectorCount 是写入的扇区数
/*************************************************************************************************/
extern unsigned char CH376DiskWriteSec(unsigned char *buf,unsigned int iLbaStart,unsigned char iSectorCount);  

/*************************************************************************************************/
//以扇区为单位从当前位置读取数据块,不支持SD卡
/*************************************************************************************************/
extern unsigned char CH376SecRead(unsigned char *buf,unsigned char ReqCount,unsigned char *RealCount);

/*************************************************************************************************/
//以扇区为单位在当前位置写入数据块,不支持SD卡
/*************************************************************************************************/
extern unsigned char CH376SecWrite(unsigned char *buf,unsigned char ReqCount,unsigned char *RealCount);
#endif

#ifdef	EN_LONG_NAME
/*************************************************************************************************/
//长文件名专用的字节写子程序
/*************************************************************************************************/
extern unsigned char CH376LongNameWrite(unsigned char *buf,unsigned short ReqCount);

/*************************************************************************************************/
//计算长文件名的短文件名检验和,输入为无小数点分隔符的固定11字节格式
/*************************************************************************************************/
extern unsigned char CH376CheckNameSum(unsigned char *DirName);

/*************************************************************************************************/
//在上级目录(文件夹);中移动文件指针到当前文件目录信息所在的扇区
//另外,顺便将当前文件目录信息所在的扇区的前一个扇区的LBA地址写入CH376内部VAR_FAT_DIR_LBA变量(为了方便收集长文件名时向前搜索,否则要多移动一次)
//使用了全局缓冲区GlobalBuf的前12个字节
/*************************************************************************************************/
extern unsigned char CH376LocateInUpDir(unsigned char *PathName);

/*************************************************************************************************/
//由短文件名或者目录(文件夹)名获得相应的长文件名
//需要输入短文件名的完整路径PathName,需要提供缓冲区接收长文件名LongName(以UNICODE小端编码,以双0结束)
//使用了全局缓冲区GlobalBuf的前34个字节,sizeof(GlobalBuf)>=sizeof(FAT_DIR_INFO)+2
/*************************************************************************************************/
extern unsigned char CH376GetLongName(unsigned char *PathName,unsigned char *LongName);

/*************************************************************************************************/
//新建具有长文件名的文件,关闭文件后返回,LongName输入路径必须在RAM中
//需要输入短文件名的完整路径PathName(请事先参考FAT规范由长文件名自行产生),需要输入以UNICODE小端编码的以双0结束的长文件名LongName
//使用了全局缓冲区GlobalBuf的前64个字节,sizeof(GlobalBuf)>=sizeof(FAT_DIR_INFO)*2
/*************************************************************************************************/
extern unsigned char CH376CreateLongName(unsigned char *PathName,unsigned char *LongName);

#endif


#endif
